{"ast":null,"code":"var _jsxFileName = \"C:\\\\CampusOrbit---All-in-One-Student-Engagement-System\\\\frontend\\\\src\\\\pages\\\\EventPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import RSVPButton from '../components/Events/RSVPButton';\n// import AttendeeList from '../components/Events/AttendeeList';\n// import { useAuth } from '../context/AuthProvider'; \n// import PhotoGallery from '../components/Events/PhotoGallery';\n// import PhotoUploadForm from '../components/Events/PhotoUploadForm'; // Ensure you import from context\n\n// import './EventPage.css';\n\n// const EventPage = () => {\n//   const { id: eventId } = useParams();\n//   const { user, loading: userLoading } = useAuth();\n//   const [event, setEvent] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       setError('You must be logged in to view event details.');\n//       setLoading(false);\n//       return;\n//     }\n\n//     axios.get(`/api/events/${eventId}`, {\n//       headers: { Authorization: `Bearer ${token}` }\n//     })\n//     .then(res => {\n//       setEvent(res.data);\n//       setLoading(false);\n//     })\n//     .catch(err => {\n//       console.error('Failed to load event:', err);\n//       setError('Failed to load event. Please try again.');\n//       setLoading(false);\n//     });\n//   }, [eventId]);\n\n//   if (loading || userLoading) return <p>Loading...</p>;\n//   if (error) return <p>{error}</p>;\n//   if (!user) return <p>Please log in to view event details.</p>;\n//   if (!event) return <p>No event found.</p>;\n\n//   const isOrganizer = ['organizer', 'club_admin', 'admin'].includes(user.role);\n\n//   console.log('Current user:', user);\n//   console.log('Is Organizer:', isOrganizer);\n//   console.log('Event attendees:', event?.attendees);\n\n//   // Update event photos state on successful photo upload\n//   const handleUploadSuccess = (newPhotos) => {\n//     setEvent(prev => ({ ...prev, photos: newPhotos }));\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h1>{event.title}</h1>\n//       <p>{event.description}</p>\n//       <p>\n//         <strong>Date: </strong>\n//         {new Date(event.date).toLocaleString()}\n//       </p>\n\n//       <RSVPButton eventId={eventId} currentUser={user} />\n\n//       {isOrganizer && (\n//         <div className=\"mt-5\">\n//           <AttendeeList eventId={eventId} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventPage;\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PhotoGallery from '../components/Events/PhotoGallery';\nimport PhotoUploadForm from '../components/Events/PhotoUploadForm';\nimport RSVPButton from '../components/Events/RSVPButton';\nimport AttendeeList from '../components/Events/AttendeeList';\nimport { useAuth } from '../context/AuthProvider';\nimport './EventPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const {\n    id: eventId\n  } = useParams();\n  const {\n    user,\n    loading: userLoading\n  } = useAuth();\n  const [event, setEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to view event details.');\n      setLoading(false);\n      return;\n    }\n    axios.get(`/api/events/${eventId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      setEvent(res.data); // Includes photos array\n      setLoading(false);\n    }).catch(err => {\n      console.error('Failed to load event:', err);\n      setError('Failed to load event. Please try again.');\n      setLoading(false);\n    });\n  }, [eventId]);\n  if (loading || userLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 38\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to view event details.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 21\n  }, this);\n  if (!event) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No event found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 22\n  }, this);\n  const isOrganizer = ['organizer', 'club_admin', 'admin'].includes(user.role);\n\n  // Update event photos state on successful photo upload\n  const handleUploadSuccess = newPhotos => {\n    setEvent(prev => ({\n      ...prev,\n      photos: newPhotos\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), new Date(event.date).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RSVPButton, {\n      eventId: eventId,\n      currentUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhotoGallery, {\n      photos: event.photos || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), isOrganizer && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PhotoUploadForm, {\n        eventId: eventId,\n        onUploadSuccess: handleUploadSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(AttendeeList, {\n          eventId: eventId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(EventPage, \"X1WyWSxpMivKzwrGRnkOKsLBSeM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","PhotoGallery","PhotoUploadForm","RSVPButton","AttendeeList","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","EventPage","_s","id","eventId","user","loading","userLoading","event","setEvent","setLoading","error","setError","token","localStorage","getItem","get","headers","Authorization","then","res","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","isOrganizer","includes","role","handleUploadSuccess","newPhotos","prev","photos","className","title","description","Date","date","toLocaleString","currentUser","onUploadSuccess","_c","$RefreshReg$"],"sources":["C:/CampusOrbit---All-in-One-Student-Engagement-System/frontend/src/pages/EventPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import RSVPButton from '../components/Events/RSVPButton';\r\n// import AttendeeList from '../components/Events/AttendeeList';\r\n// import { useAuth } from '../context/AuthProvider'; \r\n// import PhotoGallery from '../components/Events/PhotoGallery';\r\n// import PhotoUploadForm from '../components/Events/PhotoUploadForm'; // Ensure you import from context\r\n\r\n// import './EventPage.css';\r\n\r\n// const EventPage = () => {\r\n//   const { id: eventId } = useParams();\r\n//   const { user, loading: userLoading } = useAuth();\r\n//   const [event, setEvent] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       setError('You must be logged in to view event details.');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     axios.get(`/api/events/${eventId}`, {\r\n//       headers: { Authorization: `Bearer ${token}` }\r\n//     })\r\n//     .then(res => {\r\n//       setEvent(res.data);\r\n//       setLoading(false);\r\n//     })\r\n//     .catch(err => {\r\n//       console.error('Failed to load event:', err);\r\n//       setError('Failed to load event. Please try again.');\r\n//       setLoading(false);\r\n//     });\r\n//   }, [eventId]);\r\n\r\n//   if (loading || userLoading) return <p>Loading...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n//   if (!user) return <p>Please log in to view event details.</p>;\r\n//   if (!event) return <p>No event found.</p>;\r\n\r\n//   const isOrganizer = ['organizer', 'club_admin', 'admin'].includes(user.role);\r\n\r\n//   console.log('Current user:', user);\r\n//   console.log('Is Organizer:', isOrganizer);\r\n//   console.log('Event attendees:', event?.attendees);\r\n\r\n//   // Update event photos state on successful photo upload\r\n//   const handleUploadSuccess = (newPhotos) => {\r\n//     setEvent(prev => ({ ...prev, photos: newPhotos }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1>{event.title}</h1>\r\n//       <p>{event.description}</p>\r\n//       <p>\r\n//         <strong>Date: </strong>\r\n//         {new Date(event.date).toLocaleString()}\r\n//       </p>\r\n\r\n//       <RSVPButton eventId={eventId} currentUser={user} />\r\n\r\n//       {isOrganizer && (\r\n//         <div className=\"mt-5\">\r\n//           <AttendeeList eventId={eventId} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventPage;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PhotoGallery from '../components/Events/PhotoGallery';\r\nimport PhotoUploadForm from '../components/Events/PhotoUploadForm';\r\nimport RSVPButton from '../components/Events/RSVPButton';\r\nimport AttendeeList from '../components/Events/AttendeeList';\r\nimport { useAuth } from '../context/AuthProvider';\r\n\r\nimport './EventPage.css';\r\n\r\nconst EventPage = () => {\r\n  const { id: eventId } = useParams();\r\n  const { user, loading: userLoading } = useAuth();\r\n  const [event, setEvent] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setError('You must be logged in to view event details.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    axios.get(`/api/events/${eventId}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n    .then(res => {\r\n      setEvent(res.data);  // Includes photos array\r\n      setLoading(false);\r\n    })\r\n    .catch(err => {\r\n      console.error('Failed to load event:', err);\r\n      setError('Failed to load event. Please try again.');\r\n      setLoading(false);\r\n    });\r\n  }, [eventId]);\r\n\r\n  if (loading || userLoading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!user) return <p>Please log in to view event details.</p>;\r\n  if (!event) return <p>No event found.</p>;\r\n\r\n  const isOrganizer = ['organizer', 'club_admin', 'admin'].includes(user.role);\r\n\r\n  // Update event photos state on successful photo upload\r\n  const handleUploadSuccess = (newPhotos) => {\r\n    setEvent(prev => ({ ...prev, photos: newPhotos }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1>{event.title}</h1>\r\n      <p>{event.description}</p>\r\n      <p>\r\n        <strong>Date: </strong>\r\n        {new Date(event.date).toLocaleString()}\r\n      </p>\r\n\r\n      <RSVPButton eventId={eventId} currentUser={user} />\r\n\r\n      <h2>Event Photos</h2>\r\n      <PhotoGallery photos={event.photos || []} />\r\n\r\n      {isOrganizer && (\r\n        <>\r\n          <PhotoUploadForm eventId={eventId} onUploadSuccess={handleUploadSuccess} />\r\n          <div className=\"mt-5\">\r\n            <AttendeeList eventId={eventId} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}