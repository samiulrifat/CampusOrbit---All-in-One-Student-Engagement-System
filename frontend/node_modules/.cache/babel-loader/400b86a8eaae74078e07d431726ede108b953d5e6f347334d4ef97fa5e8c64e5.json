{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".';\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n  if (typeof key === 'string') {\n    return;\n  }\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n}\n;\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n  if (typeof key === 'string') {\n    return;\n  }\n  if (typeof key === 'object') {\n    return;\n  }\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n}\n;\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n  if (typeof key === 'string') {\n    return key;\n  }\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\nfunction fromBase64(base64) {\n  return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n  return base64url.replace(/\\-/g, '+').replace(/_/g, '/');\n}\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing)) thing = JSON.stringify(thing);\n  return thing;\n}\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'));\n    return fromBase64(sig);\n  };\n}\nvar bufferEqual;\nvar timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return crypto.timingSafeEqual(a, b);\n} : function timingSafeEqual(a, b) {\n  if (!bufferEqual) {\n    bufferEqual = require('buffer-equal-constant-time');\n  }\n  return bufferEqual(a, b);\n};\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));\n  };\n}\nfunction createKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  };\n}\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  };\n}\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  };\n}\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  };\n}\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  };\n}\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  };\n}\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner\n  };\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier\n  };\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match) throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits)\n  };\n};","map":{"version":3,"names":["Buffer","require","crypto","formatEcdsa","util","MSG_INVALID_ALGORITHM","MSG_INVALID_SECRET","MSG_INVALID_VERIFIER_KEY","MSG_INVALID_SIGNER_KEY","supportsKeyObjects","createPublicKey","checkIsPublicKey","key","isBuffer","typeError","type","asymmetricKeyType","export","checkIsPrivateKey","checkIsSecretKey","fromBase64","base64","replace","toBase64","base64url","toString","padding","length","i","template","args","slice","call","arguments","errMsg","format","bind","apply","TypeError","bufferOrString","obj","normalizeInput","thing","JSON","stringify","createHmacSigner","bits","sign","secret","hmac","createHmac","sig","update","digest","bufferEqual","timingSafeEqual","a","b","byteLength","createHmacVerifier","verify","signature","computedSig","from","createKeySigner","privateKey","signer","createSign","createKeyVerifier","publicKey","verifier","createVerify","createPSSKeySigner","constants","RSA_PKCS1_PSS_PADDING","saltLength","RSA_PSS_SALTLEN_DIGEST","createPSSKeyVerifier","createECDSASigner","inner","derToJose","createECDSAVerifer","joseToDer","result","createNoneSigner","createNoneVerifier","module","exports","jwa","algorithm","signerFactories","hs","rs","ps","es","none","verifierFactories","match","algo","toLowerCase"],"sources":["C:/MERN/CampusOrbit â€“ All-in-One Student Engagement System/node_modules/jwa/index.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nvar bufferEqual;\nvar timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return crypto.timingSafeEqual(a, b)\n} : function timingSafeEqual(a, b) {\n  if (!bufferEqual) {\n    bufferEqual = require('buffer-equal-constant-time');\n  }\n\n  return bufferEqual(a, b)\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}