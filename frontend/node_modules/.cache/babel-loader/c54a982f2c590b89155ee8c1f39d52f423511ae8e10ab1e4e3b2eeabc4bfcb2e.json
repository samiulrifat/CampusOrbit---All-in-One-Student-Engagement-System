{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\CampusOrbit \\u2013 All-in-One Student Engagement System\\\\frontend\\\\src\\\\components\\\\Events\\\\EventManager.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Events/EventManager.js\n\nimport React, { useState, useEffect } from \"react\";\nimport EventList from \"./EventList\";\nimport EventForm from \"./EventForm\";\nimport \"./Events.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"/api/events\";\nconst EventManager = ({\n  currentClubId\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const authHeaders = token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n  useEffect(() => {\n    fetchEvents();\n    // eslint-disable-next-line\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await fetch(API_URL, {\n        headers: authHeaders\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch events\");\n      const data = await res.json();\n      setEvents(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addEvent = async (event, photos) => {\n    try {\n      setError(null);\n      const eventWithClub = {\n        ...event,\n        clubId: currentClubId\n      };\n      const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...authHeaders\n        },\n        body: JSON.stringify(eventWithClub)\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Failed to add event\");\n      }\n      const newEvent = await res.json();\n      if (photos && photos.length) {\n        const fd = new FormData();\n        photos.forEach(photo => fd.append(\"photos\", photo));\n        const uploadRes = await fetch(`${API_URL}/${newEvent._id}/photos`, {\n          method: \"POST\",\n          headers: authHeaders,\n          body: fd\n        });\n        if (uploadRes.ok) {\n          const uploadData = await uploadRes.json();\n          newEvent.photos = uploadData.photos;\n        }\n      }\n      setEvents(prev => [...prev, newEvent]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const editEvent = async (event, photos) => {\n    try {\n      setError(null);\n      const eventWithClub = {\n        ...event,\n        clubId: currentClubId\n      };\n      const res = await fetch(`${API_URL}/${event._id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...authHeaders\n        },\n        body: JSON.stringify(eventWithClub)\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Failed to update event\");\n      }\n      const updatedEvent = await res.json();\n      if (photos && photos.length) {\n        const fd = new FormData();\n        photos.forEach(photo => fd.append(\"photos\", photo));\n        const uploadRes = await fetch(`${API_URL}/${updatedEvent._id}/photos`, {\n          method: \"POST\",\n          headers: authHeaders,\n          body: fd\n        });\n        if (uploadRes.ok) {\n          const uploadData = await uploadRes.json();\n          updatedEvent.photos = uploadData.photos;\n        }\n      }\n      setEvents(prev => prev.map(e => e._id === updatedEvent._id ? updatedEvent : e));\n      setEditingEvent(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const deleteEvent = async id => {\n    try {\n      setError(null);\n      const res = await fetch(`${API_URL}/${id}`, {\n        method: \"DELETE\",\n        headers: authHeaders\n      });\n      if (!res.ok) throw new Error(\"Failed to delete event\");\n      setEvents(prev => prev.filter(e => e._id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage CampusOrbit Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      onSubmit: editingEvent ? editEvent : addEvent,\n      event: editingEvent,\n      onCancel: () => setEditingEvent(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onDelete: deleteEvent,\n      onEdit: setEditingEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManager, \"28fk2n46hpPtqnRShdN2gLKbjC8=\");\n_c = EventManager;\nexport default EventManager;\nvar _c;\n$RefreshReg$(_c, \"EventManager\");","map":{"version":3,"names":["React","useState","useEffect","EventList","EventForm","jsxDEV","_jsxDEV","API_URL","EventManager","currentClubId","_s","events","setEvents","editingEvent","setEditingEvent","loading","setLoading","error","setError","token","localStorage","getItem","authHeaders","Authorization","fetchEvents","res","fetch","headers","ok","Error","data","json","err","message","addEvent","event","photos","eventWithClub","clubId","method","body","JSON","stringify","errData","newEvent","length","fd","FormData","forEach","photo","append","uploadRes","_id","uploadData","prev","editEvent","updatedEvent","map","e","deleteEvent","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onCancel","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/MERN/CampusOrbit â€“ All-in-One Student Engagement System/frontend/src/components/Events/EventManager.js"],"sourcesContent":["// frontend/src/components/Events/EventManager.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport EventList from \"./EventList\";\r\nimport EventForm from \"./EventForm\";\r\nimport \"./Events.css\";\r\n\r\nconst API_URL = \"/api/events\";\r\n\r\nconst EventManager = ({ currentClubId }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const authHeaders = token ? { Authorization: `Bearer ${token}` } : {};\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const res = await fetch(API_URL, { headers: authHeaders });\r\n      if (!res.ok) throw new Error(\"Failed to fetch events\");\r\n      const data = await res.json();\r\n      setEvents(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addEvent = async (event, photos) => {\r\n    try {\r\n      setError(null);\r\n      const eventWithClub = { ...event, clubId: currentClubId };\r\n\r\n      const res = await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\", ...authHeaders },\r\n        body: JSON.stringify(eventWithClub),\r\n      });\r\n      if (!res.ok) {\r\n        const errData = await res.json();\r\n        throw new Error(errData.error || \"Failed to add event\");\r\n      }\r\n      const newEvent = await res.json();\r\n\r\n      if (photos && photos.length) {\r\n        const fd = new FormData();\r\n        photos.forEach(photo => fd.append(\"photos\", photo));\r\n        const uploadRes = await fetch(`${API_URL}/${newEvent._id}/photos`, {\r\n          method: \"POST\",\r\n          headers: authHeaders,\r\n          body: fd,\r\n        });\r\n        if (uploadRes.ok) {\r\n          const uploadData = await uploadRes.json();\r\n          newEvent.photos = uploadData.photos;\r\n        }\r\n      }\r\n      setEvents(prev => [...prev, newEvent]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const editEvent = async (event, photos) => {\r\n    try {\r\n      setError(null);\r\n      const eventWithClub = { ...event, clubId: currentClubId };\r\n\r\n      const res = await fetch(`${API_URL}/${event._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\", ...authHeaders },\r\n        body: JSON.stringify(eventWithClub),\r\n      });\r\n      if (!res.ok) {\r\n        const errData = await res.json();\r\n        throw new Error(errData.error || \"Failed to update event\");\r\n      }\r\n      const updatedEvent = await res.json();\r\n\r\n      if (photos && photos.length) {\r\n        const fd = new FormData();\r\n        photos.forEach(photo => fd.append(\"photos\", photo));\r\n        const uploadRes = await fetch(`${API_URL}/${updatedEvent._id}/photos`, {\r\n          method: \"POST\",\r\n          headers: authHeaders,\r\n          body: fd,\r\n        });\r\n        if (uploadRes.ok) {\r\n          const uploadData = await uploadRes.json();\r\n          updatedEvent.photos = uploadData.photos;\r\n        }\r\n      }\r\n\r\n      setEvents(prev =>\r\n        prev.map(e => (e._id === updatedEvent._id ? updatedEvent : e))\r\n      );\r\n      setEditingEvent(null);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const deleteEvent = async (id) => {\r\n    try {\r\n      setError(null);\r\n      const res = await fetch(`${API_URL}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: authHeaders,\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete event\");\r\n      setEvents(prev => prev.filter(e => e._id !== id));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-manager\">\r\n      <h2>Manage CampusOrbit Events</h2>\r\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\r\n\r\n      <EventForm\r\n        onSubmit={editingEvent ? editEvent : addEvent}\r\n        event={editingEvent}\r\n        onCancel={() => setEditingEvent(null)}\r\n      />\r\n\r\n      {loading ? (\r\n        <p>Loading events...</p>\r\n      ) : (\r\n        <EventList events={events} onDelete={deleteEvent} onEdit={setEditingEvent} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventManager;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAG,aAAa;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,WAAW,GAAGH,KAAK,GAAG;IAAEI,aAAa,EAAE,UAAUJ,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;EAErEjB,SAAS,CAAC,MAAM;IACdsB,WAAW,CAAC,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFR,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAACnB,OAAO,EAAE;QAAEoB,OAAO,EAAEL;MAAY,CAAC,CAAC;MAC1D,IAAI,CAACG,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MACtD,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7BnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkB,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;IACxC,IAAI;MACFlB,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMmB,aAAa,GAAG;QAAE,GAAGF,KAAK;QAAEG,MAAM,EAAE7B;MAAc,CAAC;MAEzD,MAAMgB,GAAG,GAAG,MAAMC,KAAK,CAACnB,OAAO,EAAE;QAC/BgC,MAAM,EAAE,MAAM;QACdZ,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAE,GAAGL;QAAY,CAAC;QAC/DkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,aAAa;MACpC,CAAC,CAAC;MACF,IAAI,CAACZ,GAAG,CAACG,EAAE,EAAE;QACX,MAAMe,OAAO,GAAG,MAAMlB,GAAG,CAACM,IAAI,CAAC,CAAC;QAChC,MAAM,IAAIF,KAAK,CAACc,OAAO,CAAC1B,KAAK,IAAI,qBAAqB,CAAC;MACzD;MACA,MAAM2B,QAAQ,GAAG,MAAMnB,GAAG,CAACM,IAAI,CAAC,CAAC;MAEjC,IAAIK,MAAM,IAAIA,MAAM,CAACS,MAAM,EAAE;QAC3B,MAAMC,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACzBX,MAAM,CAACY,OAAO,CAACC,KAAK,IAAIH,EAAE,CAACI,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC;QACnD,MAAME,SAAS,GAAG,MAAMzB,KAAK,CAAC,GAAGnB,OAAO,IAAIqC,QAAQ,CAACQ,GAAG,SAAS,EAAE;UACjEb,MAAM,EAAE,MAAM;UACdZ,OAAO,EAAEL,WAAW;UACpBkB,IAAI,EAAEM;QACR,CAAC,CAAC;QACF,IAAIK,SAAS,CAACvB,EAAE,EAAE;UAChB,MAAMyB,UAAU,GAAG,MAAMF,SAAS,CAACpB,IAAI,CAAC,CAAC;UACzCa,QAAQ,CAACR,MAAM,GAAGiB,UAAU,CAACjB,MAAM;QACrC;MACF;MACAxB,SAAS,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEV,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMsB,SAAS,GAAG,MAAAA,CAAOpB,KAAK,EAAEC,MAAM,KAAK;IACzC,IAAI;MACFlB,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMmB,aAAa,GAAG;QAAE,GAAGF,KAAK;QAAEG,MAAM,EAAE7B;MAAc,CAAC;MAEzD,MAAMgB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGnB,OAAO,IAAI4B,KAAK,CAACiB,GAAG,EAAE,EAAE;QACjDb,MAAM,EAAE,KAAK;QACbZ,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAE,GAAGL;QAAY,CAAC;QAC/DkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,aAAa;MACpC,CAAC,CAAC;MACF,IAAI,CAACZ,GAAG,CAACG,EAAE,EAAE;QACX,MAAMe,OAAO,GAAG,MAAMlB,GAAG,CAACM,IAAI,CAAC,CAAC;QAChC,MAAM,IAAIF,KAAK,CAACc,OAAO,CAAC1B,KAAK,IAAI,wBAAwB,CAAC;MAC5D;MACA,MAAMuC,YAAY,GAAG,MAAM/B,GAAG,CAACM,IAAI,CAAC,CAAC;MAErC,IAAIK,MAAM,IAAIA,MAAM,CAACS,MAAM,EAAE;QAC3B,MAAMC,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACzBX,MAAM,CAACY,OAAO,CAACC,KAAK,IAAIH,EAAE,CAACI,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC;QACnD,MAAME,SAAS,GAAG,MAAMzB,KAAK,CAAC,GAAGnB,OAAO,IAAIiD,YAAY,CAACJ,GAAG,SAAS,EAAE;UACrEb,MAAM,EAAE,MAAM;UACdZ,OAAO,EAAEL,WAAW;UACpBkB,IAAI,EAAEM;QACR,CAAC,CAAC;QACF,IAAIK,SAAS,CAACvB,EAAE,EAAE;UAChB,MAAMyB,UAAU,GAAG,MAAMF,SAAS,CAACpB,IAAI,CAAC,CAAC;UACzCyB,YAAY,CAACpB,MAAM,GAAGiB,UAAU,CAACjB,MAAM;QACzC;MACF;MAEAxB,SAAS,CAAC0C,IAAI,IACZA,IAAI,CAACG,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACN,GAAG,KAAKI,YAAY,CAACJ,GAAG,GAAGI,YAAY,GAAGE,CAAE,CAC/D,CAAC;MACD5C,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAM0B,WAAW,GAAG,MAAOC,EAAE,IAAK;IAChC,IAAI;MACF1C,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGnB,OAAO,IAAIqD,EAAE,EAAE,EAAE;QAC1CrB,MAAM,EAAE,QAAQ;QAChBZ,OAAO,EAAEL;MACX,CAAC,CAAC;MACF,IAAI,CAACG,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MACtDjB,SAAS,CAAC0C,IAAI,IAAIA,IAAI,CAACO,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKQ,EAAE,CAAC,CAAC;IACnD,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACE3B,OAAA;IAAKwD,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzD,OAAA;MAAAyD,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjClD,KAAK,iBAAIX,OAAA;MAAG8D,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,GAAC,SAAO,EAAC9C,KAAK;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExD7D,OAAA,CAACF,SAAS;MACRkE,QAAQ,EAAEzD,YAAY,GAAG0C,SAAS,GAAGrB,QAAS;MAC9CC,KAAK,EAAEtB,YAAa;MACpB0D,QAAQ,EAAEA,CAAA,KAAMzD,eAAe,CAAC,IAAI;IAAE;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAEDpD,OAAO,gBACNT,OAAA;MAAAyD,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExB7D,OAAA,CAACH,SAAS;MAACQ,MAAM,EAAEA,MAAO;MAAC6D,QAAQ,EAAEb,WAAY;MAACc,MAAM,EAAE3D;IAAgB;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzD,EAAA,CAvIIF,YAAY;AAAAkE,EAAA,GAAZlE,YAAY;AAyIlB,eAAeA,YAAY;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}