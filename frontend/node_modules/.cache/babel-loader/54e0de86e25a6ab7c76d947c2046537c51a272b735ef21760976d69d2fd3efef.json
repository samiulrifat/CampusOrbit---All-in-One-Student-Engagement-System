{"ast":null,"code":"var _jsxFileName = \"C:\\\\CampusOrbit---All-in-One-Student-Engagement-System\\\\frontend\\\\src\\\\components\\\\Achievements\\\\AwardAchievement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwardAchievement = ({\n  clubId,\n  onAward\n}) => {\n  _s();\n  const [achievements, setAchievements] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [selectedAchievement, setSelectedAchievement] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [awarding, setAwarding] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!clubId) return;\n\n    // Fetch achievements for the club\n    axios.get(`/api/achievements/${clubId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setAchievements(res.data)).catch(err => console.error('Failed to load achievements:', err));\n\n    // Fetch club members (assumes API exists)\n    axios.get(`/api/clubs/${clubId}/members`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setMembers(res.data)).catch(err => console.error('Failed to load members:', err)).finally(() => setLoading(false));\n  }, [clubId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedAchievement || !selectedUser) {\n      alert('Please select both achievement and member');\n      return;\n    }\n    setAwarding(true);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`/api/achievements/award/${clubId}`, {\n        achievementId: selectedAchievement,\n        userId: selectedUser\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Achievement awarded successfully');\n      setSelectedAchievement('');\n      setSelectedUser('');\n      if (onAward) onAward();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to award achievement');\n      console.error(err);\n    }\n    setAwarding(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading form...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"award-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Award Achievement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Achievement:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAchievement,\n        onChange: e => setSelectedAchievement(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select achievement --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), achievements.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: a._id,\n          children: a.title\n        }, a._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Member:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUser,\n        onChange: e => setSelectedUser(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select member --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), members.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: m._id,\n          children: m.name || m.email\n        }, m._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: awarding,\n      children: awarding ? 'Awarding...' : 'Award Achievement'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AwardAchievement, \"tGX8H9qYstdtXao5C8WXbOoUda4=\");\n_c = AwardAchievement;\nexport default AwardAchievement;\nvar _c;\n$RefreshReg$(_c, \"AwardAchievement\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AwardAchievement","clubId","onAward","_s","achievements","setAchievements","members","setMembers","selectedAchievement","setSelectedAchievement","selectedUser","setSelectedUser","loading","setLoading","awarding","setAwarding","token","localStorage","getItem","get","headers","Authorization","then","res","data","catch","err","console","error","finally","handleSubmit","e","preventDefault","alert","post","achievementId","userId","_err$response","_err$response$data","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","value","onChange","target","required","map","a","_id","title","m","name","email","type","disabled","_c","$RefreshReg$"],"sources":["C:/CampusOrbit---All-in-One-Student-Engagement-System/frontend/src/components/Achievements/AwardAchievement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AwardAchievement = ({ clubId, onAward }) => {\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n  const [selectedAchievement, setSelectedAchievement] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [awarding, setAwarding] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!clubId) return;\r\n\r\n    // Fetch achievements for the club\r\n    axios.get(`/api/achievements/${clubId}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      .then(res => setAchievements(res.data))\r\n      .catch(err => console.error('Failed to load achievements:', err));\r\n\r\n    // Fetch club members (assumes API exists)\r\n    axios.get(`/api/clubs/${clubId}/members`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      .then(res => setMembers(res.data))\r\n      .catch(err => console.error('Failed to load members:', err))\r\n      .finally(() => setLoading(false));\r\n  }, [clubId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedAchievement || !selectedUser) {\r\n      alert('Please select both achievement and member');\r\n      return;\r\n    }\r\n    setAwarding(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`/api/achievements/award/${clubId}`, {\r\n        achievementId: selectedAchievement,\r\n        userId: selectedUser\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      alert('Achievement awarded successfully');\r\n      setSelectedAchievement('');\r\n      setSelectedUser('');\r\n      if (onAward) onAward();\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Failed to award achievement');\r\n      console.error(err);\r\n    }\r\n    setAwarding(false);\r\n  };\r\n\r\n  if (loading) return <p>Loading form...</p>;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"award-form\">\r\n      <h3>Award Achievement</h3>\r\n\r\n      <label>\r\n        Select Achievement:\r\n        <select\r\n          value={selectedAchievement}\r\n          onChange={e => setSelectedAchievement(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">-- Select achievement --</option>\r\n          {achievements.map(a => (\r\n            <option key={a._id} value={a._id}>{a.title}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <label>\r\n        Select Member:\r\n        <select\r\n          value={selectedUser}\r\n          onChange={e => setSelectedUser(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">-- Select member --</option>\r\n          {members.map(m => (\r\n            <option key={m._id} value={m._id}>{m.name || m.email}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <button type=\"submit\" disabled={awarding}>\r\n        {awarding ? 'Awarding...' : 'Award Achievement'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AwardAchievement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}