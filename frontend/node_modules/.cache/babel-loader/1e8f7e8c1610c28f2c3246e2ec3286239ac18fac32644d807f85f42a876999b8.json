{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\CampusOrbit \\u2013 All-in-One Student Engagement System\\\\frontend\\\\src\\\\pages\\\\PollsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from '../assets/logo.png';\nimport { AuthContext } from '../context/AuthProvider';\nimport './PollsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollsList() {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [clubId, setClubId] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (user) {\n      setClubId(user.clubId);\n      fetchPolls(user.clubId);\n    }\n  }, [user]);\n  const fetchPolls = async clubId => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/polls/${clubId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await res.json();\n      setPolls(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const vote = async (pollId, optionIndex) => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/polls/${pollId}/vote`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          optionIndex\n        })\n      });\n      const data = await res.json();\n      setMessage(data.message || data.error);\n      fetchPolls(clubId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const closePoll = async pollId => {\n    if (user.role !== 'clubAdmin') {\n      setMessage('Only club admins can close polls');\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/polls/${pollId}/close`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await res.json();\n      setMessage(data.message || data.error);\n      fetchPolls(clubId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"polls-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"CampusOrbit Logo\",\n        className: \"polls-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Club Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-msg\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No polls available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: poll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: poll.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [opt.text, \" \\u2014 \", opt.votes, \" votes\", poll.isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vote-btn\",\n              onClick: () => vote(poll._id, idx),\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), poll.isOpen ? user.role === 'clubAdmin' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => closePoll(poll._id),\n          children: \"Close Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"closed-msg\",\n          children: \"Poll Closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, poll._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(PollsList, \"+Cw/GtiovU1kt2E2VoEwY2SqgPs=\");\n_c = PollsList;\nexport default PollsList;\nvar _c;\n$RefreshReg$(_c, \"PollsList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","logo","AuthContext","jsxDEV","_jsxDEV","PollsList","_s","polls","setPolls","clubId","setClubId","message","setMessage","user","fetchPolls","res","fetch","headers","localStorage","getItem","data","json","err","console","error","vote","pollId","optionIndex","method","body","JSON","stringify","closePoll","role","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","map","poll","question","options","opt","idx","text","votes","isOpen","onClick","_id","_c","$RefreshReg$"],"sources":["C:/MERN/CampusOrbit – All-in-One Student Engagement System/frontend/src/pages/PollsList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport logo from '../assets/logo.png';\r\nimport { AuthContext } from '../context/AuthProvider';\r\nimport './PollsList.css';\r\n\r\nfunction PollsList() {\r\n  const [polls, setPolls] = useState([]);\r\n  const [clubId, setClubId] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setClubId(user.clubId);\r\n      fetchPolls(user.clubId);\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchPolls = async (clubId) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/polls/${clubId}`, {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      const data = await res.json();\r\n      setPolls(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const vote = async (pollId, optionIndex) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/polls/${pollId}/vote`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ optionIndex })\r\n      });\r\n      const data = await res.json();\r\n      setMessage(data.message || data.error);\r\n      fetchPolls(clubId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const closePoll = async (pollId) => {\r\n    if (user.role !== 'clubAdmin') {\r\n      setMessage('Only club admins can close polls');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/polls/${pollId}/close`, {\r\n        method: 'PATCH',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      setMessage(data.message || data.error);\r\n      fetchPolls(clubId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"polls-page\">\r\n      <div className=\"polls-card\">\r\n        <img src={logo} alt=\"CampusOrbit Logo\" className=\"polls-logo\" />\r\n        <h2>Club Polls</h2>\r\n        {message && <p className=\"info-msg\">{message}</p>}\r\n        {polls.length === 0 ? (\r\n          <p>No polls available.</p>\r\n        ) : (\r\n          polls.map((poll) => (\r\n            <div key={poll._id} className=\"poll-item\">\r\n              <h3>{poll.question}</h3>\r\n              <ul>\r\n                {poll.options.map((opt, idx) => (\r\n                  <li key={idx}>\r\n                    {opt.text} — {opt.votes} votes\r\n                    {poll.isOpen && (\r\n                      <button\r\n                        className=\"vote-btn\"\r\n                        onClick={() => vote(poll._id, idx)}\r\n                      >\r\n                        Vote\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {poll.isOpen ? (\r\n                user.role === 'clubAdmin' && (\r\n                  <button className=\"close-btn\" onClick={() => closePoll(poll._id)}>Close Poll</button>\r\n                )\r\n              ) : (\r\n                <p className=\"closed-msg\">Poll Closed</p>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}