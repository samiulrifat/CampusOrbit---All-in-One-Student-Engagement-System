{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\CampusOrbit \\u2013 All-in-One Student Engagement System\\\\frontend\\\\src\\\\components\\\\Events\\\\EventManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EventList from \"./EventList\";\nimport EventForm from \"./EventForm\";\nimport \"./Events.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"/api/events\"; // Use proxy in package.json!\n\nconst EventManager = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem(\"token\"); // JWT from login\n\n  // Standard auth headers for protected backend endpoints\n  const authHeaders = token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n  useEffect(() => {\n    fetchEvents();\n    // eslint-disable-next-line\n  }, []);\n\n  // Fetch\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await fetch(API_URL, {\n        headers: authHeaders\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch events\");\n      const data = await res.json();\n      setEvents(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CREATE\n  const addEvent = async (event, photos) => {\n    try {\n      setError(null);\n      const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...authHeaders\n        },\n        body: JSON.stringify(event)\n      });\n      if (!res.ok) throw new Error(\"Failed to add event\");\n      const newEvent = await res.json();\n      if (photos && photos.length) {\n        const fd = new FormData();\n        photos.forEach(photo => fd.append(\"photos\", photo));\n        const uploadRes = await fetch(`${API_URL}/${newEvent._id}/photos`, {\n          method: \"POST\",\n          headers: authHeaders,\n          body: fd\n        });\n        if (uploadRes.ok) {\n          const uploadData = await uploadRes.json();\n          newEvent.photos = uploadData.photos;\n        }\n      }\n      setEvents(prev => [...prev, newEvent]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // UPDATE\n  const editEvent = async (event, photos) => {\n    try {\n      setError(null);\n      const res = await fetch(`${API_URL}/${event._id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...authHeaders\n        },\n        body: JSON.stringify(event)\n      });\n      if (!res.ok) throw new Error(\"Failed to update event\");\n      const updatedEvent = await res.json();\n      if (photos && photos.length) {\n        const fd = new FormData();\n        photos.forEach(photo => fd.append(\"photos\", photo));\n        const uploadRes = await fetch(`${API_URL}/${updatedEvent._id}/photos`, {\n          method: \"POST\",\n          headers: authHeaders,\n          body: fd\n        });\n        if (uploadRes.ok) {\n          const uploadData = await uploadRes.json();\n          updatedEvent.photos = uploadData.photos;\n        }\n      }\n      setEvents(prev => prev.map(e => e._id === updatedEvent._id ? updatedEvent : e));\n      setEditingEvent(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // DELETE\n  const deleteEvent = async id => {\n    try {\n      setError(null);\n      const res = await fetch(`${API_URL}/${id}`, {\n        method: \"DELETE\",\n        headers: authHeaders\n      });\n      if (!res.ok) throw new Error(\"Failed to delete event\");\n      setEvents(prev => prev.filter(e => e._id !== id));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage CampusOrbit Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      onSubmit: editingEvent ? editEvent : addEvent,\n      event: editingEvent,\n      onCancel: () => setEditingEvent(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onDelete: deleteEvent,\n      onEdit: setEditingEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManager, \"28fk2n46hpPtqnRShdN2gLKbjC8=\");\n_c = EventManager;\nexport default EventManager;\nvar _c;\n$RefreshReg$(_c, \"EventManager\");","map":{"version":3,"names":["React","useState","useEffect","EventList","EventForm","jsxDEV","_jsxDEV","API_URL","EventManager","_s","events","setEvents","editingEvent","setEditingEvent","loading","setLoading","error","setError","token","localStorage","getItem","authHeaders","Authorization","fetchEvents","res","fetch","headers","ok","Error","data","json","err","message","addEvent","event","photos","method","body","JSON","stringify","newEvent","length","fd","FormData","forEach","photo","append","uploadRes","_id","uploadData","prev","editEvent","updatedEvent","map","e","deleteEvent","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onCancel","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/MERN/CampusOrbit â€“ All-in-One Student Engagement System/frontend/src/components/Events/EventManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EventList from \"./EventList\";\r\nimport EventForm from \"./EventForm\";\r\nimport \"./Events.css\";\r\n\r\nconst API_URL = \"/api/events\"; // Use proxy in package.json!\r\n\r\nconst EventManager = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"token\"); // JWT from login\r\n\r\n  // Standard auth headers for protected backend endpoints\r\n  const authHeaders = token\r\n    ? { Authorization: `Bearer ${token}` }\r\n    : {};\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Fetch\r\n  const fetchEvents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const res = await fetch(API_URL, {\r\n        headers: authHeaders,\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to fetch events\");\r\n      const data = await res.json();\r\n      setEvents(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // CREATE\r\n  const addEvent = async (event, photos) => {\r\n    try {\r\n      setError(null);\r\n      const res = await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\", ...authHeaders },\r\n        body: JSON.stringify(event),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add event\");\r\n      const newEvent = await res.json();\r\n\r\n      if (photos && photos.length) {\r\n        const fd = new FormData();\r\n        photos.forEach(photo => fd.append(\"photos\", photo));\r\n        const uploadRes = await fetch(`${API_URL}/${newEvent._id}/photos`, {\r\n          method: \"POST\",\r\n          headers: authHeaders,\r\n          body: fd,\r\n        });\r\n        if (uploadRes.ok) {\r\n          const uploadData = await uploadRes.json();\r\n          newEvent.photos = uploadData.photos;\r\n        }\r\n      }\r\n      setEvents(prev => [...prev, newEvent]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // UPDATE\r\n  const editEvent = async (event, photos) => {\r\n    try {\r\n      setError(null);\r\n      const res = await fetch(`${API_URL}/${event._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\", ...authHeaders },\r\n        body: JSON.stringify(event),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update event\");\r\n      const updatedEvent = await res.json();\r\n\r\n      if (photos && photos.length) {\r\n        const fd = new FormData();\r\n        photos.forEach(photo => fd.append(\"photos\", photo));\r\n        const uploadRes = await fetch(`${API_URL}/${updatedEvent._id}/photos`, {\r\n          method: \"POST\",\r\n          headers: authHeaders,\r\n          body: fd,\r\n        });\r\n        if (uploadRes.ok) {\r\n          const uploadData = await uploadRes.json();\r\n          updatedEvent.photos = uploadData.photos;\r\n        }\r\n      }\r\n      setEvents(prev =>\r\n        prev.map(e => (e._id === updatedEvent._id ? updatedEvent : e))\r\n      );\r\n      setEditingEvent(null);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // DELETE\r\n  const deleteEvent = async (id) => {\r\n    try {\r\n      setError(null);\r\n      const res = await fetch(`${API_URL}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: authHeaders,\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete event\");\r\n      setEvents(prev => prev.filter(e => e._id !== id));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-manager\">\r\n      <h2>Manage CampusOrbit Events</h2>\r\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\r\n\r\n      <EventForm\r\n        onSubmit={editingEvent ? editEvent : addEvent}\r\n        event={editingEvent}\r\n        onCancel={() => setEditingEvent(null)}\r\n      />\r\n\r\n      {loading ? <p>Loading events...</p>\r\n        : <EventList events={events} onDelete={deleteEvent} onEdit={setEditingEvent} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}